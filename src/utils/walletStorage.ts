import { openDB } from "idb";

const DB_NAME = "walletDB";
const STORE_NAME = "walletStore";

// üè¶ 1Ô∏è‚É£ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
export async function initDB() {
  return openDB(DB_NAME, 1, {
    upgrade(db) {
      if (!db.objectStoreNames.contains(STORE_NAME)) {
        db.createObjectStore(STORE_NAME);
      }
    },
  });
}

// üîé 2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–æ—à–µ–ª–µ–∫ (—á–µ—Ä–µ–∑ getWallet)
export async function walletExists(): Promise<boolean> {
  return (await getEncryptedWallet()) !== null;
}

// üóÇÔ∏è 3Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
export async function getEncryptedWallet(): Promise<string | null> {
  try {
    const db = await initDB();
    return await db.get(STORE_NAME, "wallet");
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ—à–µ–ª—å–∫–∞:", error);
    return null;
  }
}

// üíæ 4Ô∏è‚É£ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞
export async function saveEncryptedWallet(encryptedWallet: string) {
  try {
    const db = await initDB();
    await db.put(STORE_NAME, encryptedWallet, "wallet");
    console.log("‚úÖ –ö–æ—à–µ–ª–µ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!");
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–æ—à–µ–ª—å–∫–∞:", error);
  }
}

// üóëÔ∏è 5Ô∏è‚É£ –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞
export async function deleteWallet() {
  try {
    const db = await initDB();
    await db.delete(STORE_NAME, "wallet");
    console.log("üóëÔ∏è –ö–æ—à–µ–ª–µ–∫ —É–¥–∞–ª–µ–Ω!");
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–æ—à–µ–ª—å–∫–∞:", error);
  }
}
