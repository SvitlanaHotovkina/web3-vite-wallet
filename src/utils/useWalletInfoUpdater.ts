import { useEffect } from "react";
import { getWalletSession, updateWalletSession } from "./walletSession";
import { getWalletInfo } from "./getWalletInfo";

export function useWalletInfoUpdater(doIt: boolean) {
  useEffect(() => {
    let isCancelled = false;

    const poll = async () => {
      const session = getWalletSession();
      if (!session) return;

      try {
        console.log("üåÄ –û–Ω–æ–≤–ª–µ–Ω–Ω—è...");
        const newInfo = await getWalletInfo(session.address);
        const updated = {
          ...session,
          ...newInfo,
        };
        updateWalletSession(updated);
        console.log("üîÑ –û–Ω–æ–≤–ª–µ–Ω–æ —Å–µ—Å—ñ—é:", updated);
      } catch (e) {
        console.error("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ —Å–µ—Å—ñ—é:", e);
      }

      if (!isCancelled) {
        setTimeout(poll, 5000); // —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –∑–∞–ø—É—Å–∫–∞—î–º–æ –∑–Ω–æ–≤—É
      }
    };

    poll(); // —Å—Ç–∞—Ä—Ç –æ–¥—Ä–∞–∑—É –ø—Ä–∏ –º–æ–Ω—Ç—É–≤–∞–Ω–Ω—ñ

    return () => {
      isCancelled = true; // –æ—á–∏—â–µ–Ω–Ω—è –ø—Ä–∏ –∞–Ω–º–∞—É–Ω—Ç—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    };
  }, [doIt]);
}
